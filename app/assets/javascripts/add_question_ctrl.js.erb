(function() {
  "use strict";

  angular.module("app").controller("addQuestionCtrl", function($scope, $http) {

    $scope.questions = [];
    $scope.questionsToDelete = [];
    $scope.questionOptionsToDelete = [];



    $scope.setTemplateId = function(id) {
      $scope.templateId = id;
      $http.get("/api/v1/questions.json?template_id=" + $scope.templateId).then(function (response) {
        $scope.questions = response.data;
      });
      
    };

    



    $scope.addQuestion = function(templateId) {
      var question = { text: "", required: "", format_type: "", template_id: templateId};

      $scope.questions.push(question);
    };

    $scope.deleteQuestion = function(question) {
      $scope.questionsToDelete.push(question);
      var questionIndex = $scope.questions.indexOf(question);
      $scope.questions.splice(questionIndex, 1);
    }




    $scope.addOption = function(question) {
      if (!question.options) {
        question.options = [];
      }
      question.options.push({text: ""});
    };

    $scope.removeOption = function(question) {
      $scope.questionOptionsToDelete.push(question);
      question.options.pop();
    };

    $scope.save = function(templateId) {
      $http.post('/api/v1/questions/batch.json', {questions: $scope.questions }).then(function(response) {
        if ($scope.questionsToDelete[0] || $scope.questionOptionsToDelete[0]) {
          $http.post('/api/v1/questions/batch_destroy.json', {questions: $scope.questionsToDelete }).then(function(response) {
            if ($scope.questionOptionsToDelete[0]) {
              $http.post('/api/v1/question_options/batch_destroy.json', {options: $scope.questionOptionsToDelete }).then(function(response) {
                window.location.assign('<%= ENV["BASE_URL"] %>templates/' + templateId + '/questions');
              }, function (error) {
                $scope.deleteOptionErrors = error.data.errors;
              });
            }
            window.location.assign('<%= ENV["BASE_URL"] %>templates/' + templateId + '/questions');
          }, function (error) {
            $scope.deleteErrors = error.data.errors;
          }); 
        }
        window.location.assign('<%= ENV["BASE_URL"] %>templates/' + templateId + '/questions');
      }, function (error) {
        $scope.questionErrors = error.data.errors;
      });

    };


    window.scope = $scope;

    //      $scope.questionsDelete << $scope.questionsDelete.push(question)
    // $scope.save = function(templateId) {
    //   $http.delete("/api/v1/questions/" + $scope.templateId + ".json").then(function (response) {
    //   });
    //   for(var m = 0; m < $scope.questions.length; m++) {
    //     $scope.saveQuestion(m);
    //   }

    // };

    // $scope.saveQuestion = function(id) {
    //   var question = $scope.questions[id];
    //     $http.post('/api/v1/questions.json', {question: question}).then(function(response) {
    //       var questionId = response.data.id;
    //       if (question.options) {
    //         for (var j = 0; j < question.options.length; j++) {
    //           $scope.saveOption(j, question, questionId);
    //         }
    //       } else {
    //         if(id === $scope.questions.length - 1) {
    //           $scope.loadIndex($scope.templateId);
    //         }
    //       }

    //     }, function (error) {
    //       $scope.optionErrors = error.data.errors;
    //     });
    // }

    // $scope.saveOption = function(id, question, questionId) {
    //   $http.post('/api/v1/question_options.json', {question_option: { text: question.options[id].text, question_id: questionId }}).then(function(response) {
    //     if(id === question.options.length - 1 && questionId === $scope.questions.length - 1) {
    //       $scope.loadIndex($scope.templateId);
    //     }
    //           }, function (error) {
    //           $scope.questionErrors = error.data.errors;
    //           });
    // };






  });
}());